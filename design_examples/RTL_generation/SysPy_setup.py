"""
*****************************************************************************
                                                                            *
                    H E A D E R   I N F O R M A T I O N                     *
                                                                            *
*****************************************************************************
Project Name: SysPy (System Python)
              http://cgi.di.uoa.gr/~evlog/syspy.html

File Name:    _func_check.py

Created by:   Evangelos Logaras


*****************************************************************************
                                                                            *
                      C O P Y R I G H T   N O T I C E                       *
                                                                            *
*****************************************************************************

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; 
  version 2.1 of the License, a copy of which is available from
  http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  
  USA


*****************************************************************************
                                                                            *
                           D E S C R I P T I O N                            *
                                                                            *
*****************************************************************************

  Checking if the declared function exists in "_func_lib.py" and storing in 
  "func_vars" the variables of the function.
  
"""

#---------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------0---0000------------------------
#--------------------------------------------------------------------0--0----00---------------------
#---------------------------------------------------------------------0--0-------00-----------------
#-----------------------------------------------------00000000000000000--0---------00---------------
#----------------------------------------------------00---------------0--0-----------0--------------
#---------------------------------------------------00----------------0--0------------000000000000--
#----00000000--------------------------000000000----00----------------0--0------------0----------00-
#---00---------------------------------00------000--0-----------0000000--0----------0-------------00
#--00----------------------------------00-------00--00--------00------0--0--------00--------------00
#--00-----------00-------0----00000----00-------00--00-------00-------0-0------00-----------------00
#---000---------00------00---00--------00------000---00------0-------0--000000--------------------00
#-----000000-----00----00---00---------000000000-----00-----00------------------------------------00
#---------000-----0----00----0000------000------------00---00-------------------------------------00
#-----------00----00--00--------0000---00--------------0---0--------------------------------------00
#-----------00-----00-0-----------00---00--------------00-00--------------------------------------00
#----------00------0000-----------00---00---------------000---------------------------------------00
#--000000000--------00-------000000----00---------------000---------------------------------------00
#-------------------00-----------------00---------------00----------------------------------------00
#------------------00------------------00---------------0-----------------------------------------00
#------------------0-------------------00--------------00-----------------------------------------00
#-----------------0--------------------00--------------0------------------------------------------00
#---------------------------------------00--------------------------------------------------------00
#----------------------------------------0000000000000000000000000000000000000000000000000000000000-
#-----------------------------------------00000000000000000000000000000000000000000000000000000000--
#---------------------------------------------------------------------------------------------------

#SysPy setup file

import sys, commands, pdb, ConfigParser

# Exception class
#----------------------------------------------------------------------------------------------------------------------------------
class MyExceptions(Exception):
       def __init__(self, value):
              self.value = value
       def __str__(self):
              return repr(self.value)
#----------------------------------------------------------------------------------------------------------------------------------

# Read current path
CurrentPath = commands.getoutput('pwd')

# Creating and reading values from the configuration file
#----------------------------------------------------------------------------------------------------------------------------------                          
config_file_path = "./SysPy.ini"
try:
       configFile = open(config_file_path, 'a')
except IOError:
       raise funcs._MyExceptions.MyExceptions("\"SysPy.ini\" configuration file not found.")
else:
       configFile.write("\nwork_dir=" + CurrentPath + '/')
       configFile.close()
       Config = ConfigParser.ConfigParser()
       Config.read(config_file_path)
       config_sections = Config.sections()
       config_options = {}
       for i in config_sections:
              options = Config.options(i)
              for j in options:
                     config_options[j] = Config.get(i, j)
      
#---------------------------------------------------------------------------------------------------------------------------------

sys.path.append(config_options["syspy_dir"])



com = commands.getoutput('cp ./SysPy.ini ' + config_options["syspy_dir"])




