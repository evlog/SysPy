library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

---- Uncomment the following library declaration if instantiating
---- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity InitmemsOT is
port (clk : in std_logic; 
 	we  : in std_logic;
 	a   : in std_logic_vector(8 downto 0); 
 	di  : in std_logic_vector (2 downto 0); 
 	do  : out std_logic_vector(2 downto 0));
end InitmemsOT;

architecture Behavioral of InitmemsOT is
type ram_type is array(0 to 511) of std_logic_vector(2 downto 0);
signal RAM:ram_type:= (

  "011","110","111","101","010","110","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000",
  "000","000","000","000","000","000","000","000"
 );
begin
process(clk,we)
begin
 if clk'event and clk='1' then
   if we='1' then
	  RAM(conv_integer(a))<=di;
	 else
     do<= RAM(conv_integer(a));	 
	end if;  
end if;
end process;	

end Behavioral;
